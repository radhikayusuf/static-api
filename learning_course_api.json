{
  "status": 200,
  "message": "Success retrieved data",
  "data": [
    {
      "title": "Pemodelan Data",
      "steps_count": 5,
      "sub_title": "Untuk Pemula",
      "image_url": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRoQJazpADZzh6bkZ89cAUGBMW1--Vov-KeC_ZwiWdsUxRvKc7M",
      "total_time": 36000,
      "desc": "Model data sendiri dapat didefinisikan sebagai kumpulan perangkat konseptual untuk menggambarkan data, hubungan data, semantik (makna) data dan btasan data.",
      "steps": [
        {
          "title": "Pemodelan data.",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Model data sendiri dapat didefinisikan sebagai kumpulan perangkat konseptual untuk menggambarkan data, hubungan data, semantik (makna) data dan btasan data. Oleh karena yang ingin ditunjukkan adalah makna dari data dan keterhubungannya dengan data lain, maka model data ini lebih tepat jika disebut <strong>Model Data Lojik</strong>. Penyingkatannya menjadi Model Data dilakukan demi penyederhanaan penulisan.</p> Ada sejumlah cara dalam merepresentasikan Model Data dalam perancangan <strong>basis data</strong>, yang secara umum dapat dibagi dalam 2 kelompok, yaitu :"
        },
        {
          "title": "Object-Based Logical Models",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Model data berdasarkan objek merupakan himpunan data dan relasi yang menjelaskan hubungan logik antara data dalam basis data berdasarkan objek datanya. Model data berdasarkan objek di bagi 2, yaitu :</p> <br><strong>a. Model Keterhubungan Entitas (Entity-Relationship Model)</strong><br><p>Model keterhubungan entitas yaitu menjelaskan hubungan antar data berdasarkan suatu persepsi bahwa objek di dunia nyata memiliki hubungan atau relasi dengan objek di dunia nyata lainnya. Model ini pertama diperkenalkan oleh Peter Chen pada tahun 1976.</p><p>Model keterhubungan entitas berisi ketentuan atau aturan khusus yang harus dipenuhi oleh isi database. Aturan terpenting adalah Mapping Cardinslities, yang menentukan jumlah entitas yang dapat dikaitkan dengan entitas lainnya melalui relationship-set. Contoh model keterhubungan entitas :</p> <img src='https://i.ibb.co/2KDzMZL/1.png'></p><br><strong>b.Semantic Data Model</strong><p>Pada dasarnya model data semantik memiliki arti yang hampir sama dengan model data keterhubungan. Hanya perbedaan yang tampak pada relasi objek dasar yang tidak dinyatakan dengan simbol melainkan menggunakan kata-kata (semantic). Contohnya pada model data semantik, tanda panah menunjukkan adanya relasi antar entitas, sedangkan garis lurus menunjukkan atribut / unsur dari entitas. Contoh model data semantik :</p> <img src='https://i.ibb.co/yYBcCF1/image.png'></p>"
        },
        {
          "title": "Record-Based Logical Models",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Model data berdasarkan record ini mendasarkan pada record untuk menjelaskan kepada pengguna tentang hubungan lojik atra data dalam basis data. Model data berdasarkan record dibagi menjadi 3, yaitu :</p> <br> <strong> a.Relational Model</strong><p>Model data relasional merepresentasikan data dalam bentuk tabel yang terdapat sejumlah baris yang menujuk record dan kolom yang menunjuk atribut. Model ini banyak digunakan dalam pemodelan dan perancangan basis data. Konsep dan terminologi yang digunakan mirip dengan kondisi di dunia nyata yang dihadapi oleh pengguna, sehingga mudah untuk dipahami. Contoh model data relasional, yaitu :</p><br><strong> a. Relational model</strong><p>Model data relasional merepresentasikan data dalam bentuk tabel yang terdapat sejumlah baris yang menujuk record dan kolom yang menunjuk atribut. Model ini banyak digunakan dalam pemodelan dan perancangan basis data. Konsep dan terminologi yang digunakan mirip dengan kondisi di dunia nyata yang dihadapi oleh pengguna, sehingga mudah untuk dipahami. Contoh model data relasional, yaitu : <br><img src='https://i.ibb.co/YbvNb9C/image.png'><br><strong>b. Model Hirarkis (<em>Hirarchical Model</em>)</strong><p>Model hirarkis biasa juga disebut struktur pohon (tree structure), hubungan bertingkat. Dalam model ini elemen-elemen penyusunannya disebut node. Dapat berupa rincian data, agregat data, dan record.Istilah-istilah yang biasa digunakan dalam model hirarkis adalah :<br> <ul><li>Root : Node yang memiliki kedudukan paling tinggi dalam hirarki</li><li>Parent : Node yang memiliki kedudukan lebih tinggi</li><li>Child : Node yang memiliki kedudukan lebih rendah</li><li>Leaves : Node yang tidak mempunyai child</li></ul><br>Contoh model hirarkis yaitu :<br><img src='https://i.ibb.co/KFrdqy5/image.png'>"
        }
      ]
    },
    {
      "title": "Model Entity-Relationship (Model Keterhubungan-Entitas)",
      "steps_count": 11,
      "sub_title": "Untuk Pemula",
      "image_url": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRoQJazpADZzh6bkZ89cAUGBMW1--Vov-KeC_ZwiWdsUxRvKc7M",
      "total_time": 36000,
      "desc": "<p>Pada model Entity-Relationship, semesta data yang ada di dunia nyata diterjemahkan dengan memanfaatkan sejumlah perangkat konseptual menjadi sebuah diagram data, yang umum disebut sebagai diagram entity-relationship (Diagram E-R). Komponen-komponen pembentuk diagram E-R, sesuai dengan namanya, ada dua komponen utama yaitu Entitas (entity) dan Relasi (relation). Kedua komponen ini dideskripsikan lebih jauh melalui sejumlah Atribut / Properti.</p>",
      "steps": [
        {
          "title": "Entitas (Entity) dan Himpunan Entitas (Entity Set)",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Entitas merupakan individu yang mewakili sesuatu yang nyata yang kita duduki, seseorang yang menjadi pegawai di sebuah perusahaan dan mobil yang melintas di depan kita adalah entitas. Sekelompok entitas yang sejenis dan berada dalam lingkup yang sama membentuk sebuah himpunan entitas (entity set). Sederhananya, entitas menunjuk pada individu suatu objek, sedang himpunan entitas menunjuk pada rumpun (famili) dari individu tersebut. Seseorang memang dapat menjadi sebuah entitas, tapi dapat berada pada himpunan entitas yang berbeda dengan seseorang yang lain.</p> <p>Seorang pasien, misalnya, akan dimasukkan dalam himpunan entitas pasien, sedang seorang dokter akan ditempatkan dalam himpunan entitas dokter. Dalam berbagai pembahasan/literatur penyebutan himpunan entitas ini seringkali digantikan dengan sebutan entitas saja. Karena itu, sering kita temui penggunaan istilah entitas (entity) di sebuah literatur sebenarnya menunjuk pada himpunan entitas.</p> <p>Contoh himpunan entitas :</p> <ol> <li>Semua pelanggan, atau pelanggan saja : Dengan entitas budiman, suherman, aminah, dst.</li> <li>Semua mobil, atau mobil saja : Dengan entitas mobil suzuki, toyota, honda, dll.</li> <li>Semua mahasiswa, atau mahasiswa saja : Dengan entitas ali, budi, iman, dst.</li></ol>"
        },
        {
          "title": "Atribut (Attributes / Properties)",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Setiap entitas pasti memiliki atribut yang mendeskripsikan karakteristik (properties) dari entitas tersebut. Sebagaimana telah disebutkan sebelumnya, penentuan atribut-atribut yang relevan bagi sebuah entitas merupakan hal penting lainnya dalam pembentukan model data. Penetapan atribut bagi sebuah entitas umumnya memang didasarkan pada fakta yang ada. Tetapi tidak selalu seperti itu. Kelak akan dilihat, karena proses normalisasi atau pertimbangan-pertimbangan tertentu, ada sejumlah atribut yang tidak ada di dunia nyata, tapi perlu ditambahkan. Yang perlu diperhatikan dalam pembuatan diagram E-R adalah kedudukan atribut dalam entitas. Harus dapat dibedakan / ketahui, mana atribut yang berfungsi sebagai key primer dan mana yang bukan (atribut deskriptif). Contoh :</p> <ol> <li>Atribut nim merupakan key untuk himpunan entitas mahasiswa karena nim merupakan pengidentifikasi entitas yang paling unik untuk semua entitas dalam himpunan entitas tersebut. Atribut-atribut lainnya (nama, alamat, dan tgl_lahir) merupakan atribut deskriptif.</li> <li>Kumpulan atribut kode_jenis_barang dan no_barang merupakan key Himpunan Entitas Barang.</li> </ol><p>Setiap entitas pasti memiliki atribut yang mendeskripsikan karakteristik (properties) dari entitas tersebut. Sebagaimana telah disebutkan sebelumnya, penentuan atribut-atribut yang relevan bagi sebuah entitas merupakan hal penting lainnya dalam pembentukan model data. Penetapan atribut bagi sebuah entitas umumnya memang didasarkan pada fakta yang ada. Tetapi tidak selalu seperti itu. Kelak akan dilihat, karena proses normalisasi atau pertimbangan-pertimbangan tertentu, ada sejumlah atribut yang tidak ada di dunia nyata, tapi perlu ditambahkan. Yang perlu diperhatikan dalam pembuatan diagram E-R adalah kedudukan atribut dalam entitas. Harus dapat dibedakan / ketahui, mana atribut yang berfungsi sebagai key primer dan mana yang bukan (atribut deskriptif). Contoh :</p> <ol> <li>Atribut nim merupakan key untuk himpunan entitas mahasiswa karena nim merupakan pengidentifikasi entitas yang paling unik untuk semua entitas dalam himpunan entitas tersebut. Atribut-atribut lainnya (nama, alamat, dan tgl_lahir) merupakan atribut deskriptif.</li> <li>Kumpulan atribut kode_jenis_barang dan no_barang merupakan key Himpunan Entitas Barang.</li> </ol>"
        },
        {
          "title": "Relasi (Relationship) dan Himpunan Relasi (Relationship Sets)",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Relasi menunjukkan adanya hubungan di antara sejumlah entitas yang berasal dari himpunan entitas yang berbeda. Misalnya, entitas seorang mahasiswa dengan nim = ‘10110001’ dan nama_mhs = ‘Asep Supena’ (yang ada di himpunan entitas mahasiswa) mempunyai relasi dengan entitas sebuah mata kuliah dengan kode_kul = ‘IF-110’ dan nama_kul = ‘Struktur Data’. Relasi di antara kedua entitas tadi mengandung arti bahwa mahasiswa tersebut sedang mengambil / mempelajari mata kuliah tersebut di sebuah perguruan tinggi yang sedang ditinjau.</p> <p>Kumpulan semua relasi di antara entitas-entitas yang terdapat pada himpunan entitas-entitas tersebut membentuk himpunan relasi. Sebagaimana istilah himpunan entitas yang banyak sekali disingkat menjadi entitas, istilah himpunan relasi jarang sekali digunakan dan lebih sering disingkat dengan istilah relasi saja.</p> <p>Sebagai contoh selain entitas mahasiswa yang sudah dijelaskan sebelumnya, ditambahkan entitas kuliah dengan struktur dan contoh data sebagai berikut :</p> <p>Himpunan entitas mata kuliah ini memiliki relasi dengan himpunan entitas mahasiswa yang dapat digambarkan sebagai berikut :</p> <p>Dari contoh di atas dapat dilihat, bahwa terdapat relasi antara tabel mahasiswa dengan tabel mata kuliah, misal mahasiswa dengan nama asep supena diketahui mengambil mata kuliah struktur data, dan basis data.</p><p>Relasi menunjukkan adanya hubungan di antara sejumlah entitas yang berasal dari himpunan entitas yang berbeda. Misalnya, entitas seorang mahasiswa dengan nim = ‘10110001’ dan nama_mhs = ‘Asep Supena’ (yang ada di himpunan entitas mahasiswa) mempunyai relasi dengan entitas sebuah mata kuliah dengan kode_kul = ‘IF-110’ dan nama_kul = ‘Struktur Data’. Relasi di antara kedua entitas tadi mengandung arti bahwa mahasiswa tersebut sedang mengambil / mempelajari mata kuliah tersebut di sebuah perguruan tinggi yang sedang ditinjau.</p> <p>Kumpulan semua relasi di antara entitas-entitas yang terdapat pada himpunan entitas-entitas tersebut membentuk himpunan relasi. Sebagaimana istilah himpunan entitas yang banyak sekali disingkat menjadi entitas, istilah himpunan relasi jarang sekali digunakan dan lebih sering disingkat dengan istilah relasi saja.</p> <p>Sebagai contoh selain entitas mahasiswa yang sudah dijelaskan sebelumnya, ditambahkan entitas kuliah dengan struktur dan contoh data sebagai berikut :</p> <p>Himpunan entitas mata kuliah ini memiliki relasi dengan himpunan entitas mahasiswa yang dapat digambarkan sebagai berikut :</p> <p>Dari contoh di atas dapat dilihat, bahwa terdapat relasi antara tabel mahasiswa dengan tabel mata kuliah, misal mahasiswa dengan nama asep supena diketahui mengambil mata kuliah struktur data, dan basis data.</p>"
        },
        {
          "title": "Kardinalitas / Derajat Relasi",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Kardinalitas relasi menunjukkan jumlah maksimum entitas yang dapat berelasi dengan entitas pada himpunan entitas yang lain. Pada contoh sebelumnya, dapat dilihat bahwa entitas-entitas pada himpunan entitas mahasiswa dapat berelasi dengan satu, atau banyak, atau tidak satupun entitas pada himpunan entitas mata kuliah. Begitu pula sebaliknya.</p> <p>Dari sejumlah kemungkinan banyaknya hubungan antar entitas tersebut, kardinalitas relasi merujuk kepada hubungan maksimum yang terjadi dari himpunan entitas yang satu ke himpunan entitas yang lain dan begitu juga sebaliknya. Pada kasus di atas, hubungan maksimum dari himpunan entitas mahasiswa ke himpunan entitas mata kuliah adalah banyak, dan untuk himpunan mata kuliah ke himpunan entitas mahasiswa adalah banyak, sehingga kardinalitas antara kedua himpunan entitas adalah banyak ke banyak.</p> <p>Kardinalitas relasi yang terjadi di antara dua himpunan entitas dapat berupa :</p> <ol> <li><p>Satu ke Satu (one to one) Yang berarti setiap entitas pada himpunan entitas A berhubungan dengan paling banyak satu entitas pada himpunan entitas B, dan begitu pula sebaliknya.</p> </li> <li><p>Satu ke Banyak (one to many) Yang berarti setiap entitas pada himpunan entitas A dapat berhubungan dengan banyak entitas pada himpunan entitas B, tetapi tidak sebaliknya dengan setiap himpunan B hanya dapat berhubungan dengan paling banyak satu entitas pada himpunan entitas A.</p> </li> <li><p>Banyak ke Satu (many to one) Yang berarti setiap entitas pada himpunan entitas A berhubungan dengan paling banyak satu entitas pada himpunan entitas B, tetapi tidak sebaliknya dengan setiap himpunan B yang dapat berhubungan dengan banyak entitas pada himpunan A.</p> </li> <li><p>Banyak ke Banyak (many to many) Yang berarti setiap entitas pada himpunan entitas A dapat berhubungan dengan banyak entitas pada himpunan entitas B dan demikian juga sebaliknya.</p> </li> </ol> <p>Kardinalitas relasi satu ke banyak dan banyak ke satu dapat dianggap sama, karena tinjauan kardinalitas relasi selalu dilihat dari dua sisi.</p>"
        },
        {
          "title": "Diagram Entity-Relationship (Diagram E-R)",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p><strong>Diagram Entity-Relationship (Diagram E-R)</strong></p> <p>Model Entity-Relationship yang berisi komponen-komponen himpunan entitas dan himpunan relasi yang masing-masing dilengkapi dengan atribut-atribut yang merepresentasikan seluruh fakta dari dunia nyata yang ditinjau, dapat digambarkan dengan lebih sistematis dengan menggunakan diagram E-R. Notasi-notasi simbolik di dalam diagram E-R yang dapat digunakan adalah :</p> "
        },
        {
          "title": "Tahapan Pembuatan Diagram E-R",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Diagram E-R selalu dibuat secara bertahap. Paling tidak ada dua kelompok pentahapan yang biasa ditempuh di dalam pembuatan Diagram E-R, yaitu :</p> <ol> <li>Tahap pembuatan Diagram E-R (<em>preliminary design</em>)</li> <li>Tahap optimasi Diagram E-R (<em>final design</em>)</li> </ol> <p>Objektif dari tahap pertama adalah untuk mendapatkan sebuah rancangan basis data minimal yang dapat mengakomodasi kebutuhan penyimpanan data terhadap sistem yang sedang di tinjau. Tahap awal umumnya juga mengabaikan anomali-anomali (sejumlah pengecualian) yang memang ada sebagai suatu faktu. Anomali-anomali tersebut biasanya baru dipertimbangkan pada tahap kedua. Pada tahap kedua akan memperhatikan aspek-aspek efisiensi, performansi dan fleksibilitas, tiga hal ini ditempuh dengan melakukan koreksi terhadap hasil tahap pertama. Bentuk-bentuk koreksi yang terjadi bisa berupa pendekomposisian relasi, penambahan relasi baru hingga perubahan (penambahan dan pengurangan) atribut-atribut untuk masing-masing entitas dan relasi.</p> <p>Pada tahap yang pertama, langkah-langkah teknis yang dapat dilakukan untuk menghasilkan Diagram E-R awal adalah :</p> <ol> <li>Mengidentifikasi dan menetapkan seluruh himpunan entitas yang akan terlibat.</li> <li>Menentukan atribut-atribut key dari masing-masing himpunan entitas.</li> <li>Mengidentifikasi dan menetapkan seluruh himpunan relasi di antara himpunan entitas-himpunan entitas yang ada beserta foreign-key-nya.</li> <li>Menentukan derajat / kardinalitas relasi untuk setiap himpunan relasi.</li> <li>Melengkapi himpunan entitas dan himpunan relasi dengan atribut-atribut deskriptif (non key).</li> </ol>"
        },
        {
          "title": "Diagram E-R dengan Kamus Data",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Objektif utama dari pembuatan diagram E-R adalah untuk menunjukkan objek-objek apa saja yang ingin dilibatkan dalam sebuah basis data dan bagaimana hubungan yang terjadi di antara objek-objek</p> <p>tersebut. Pada sebuah sistem yang ruang lingkupnya lebar dan kompleks, penggambaran atribut- atribut dalam sebuah diagram E-R seringkali malah mengganggu objektif yang ingin dicapai tersebut.</p> <p>Untuk itu pendeklarasian atribut-atribut ini dapat dipisahkan dalam sebuah diagram E-R dan menyatakannya dalam sebuah kamus data. Kamus data berisi daftar atribut yang diapit kurung kurawal ( { dan } ). Atribut yang berfungsi sebagai key juga dibedakan dengna yang bukan key dengna mengarisbawahi atribut tersebut.</p>"
        },
        {
          "title": "Varian Entitas",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Himpunan entitas yang dapat dilibatkan dalam sebuah diagram E-R adalah himpunan entitas kuat / bebas (strong entity sets). Himpunan entitas demikian tidak memiliki ketergantungan dengan himpunan entitas lainnya. Namun dalam pembuatan diagram E-R tidak selalu melibatkan himpunan entitas seperti itu, ada kalanya dalam pembuatan diagram E-R melibatkan himpunan entitas lemah (weak entity sets) atau merupakan bagian dari himpunan entitas lainnya (subtype entities).</p> <p><strong>1. Himpunan Entitas Lemah (<em>Weak Entity Sets</em>)</strong></p> <blockquote> <p>Himpunan entitas lemah berisi entitas-entitas yang kemunculannya tergantung pada eksistensinya dalam sebuah relasi terhadap entitas lain (Strong Entity). Himpunan entitas yang demikian biasanya tidak memiliki atribut yang berfungsi sebagai key, yang benar-benar dapat menjamin keunikan entitas di dalamnya. Sebagai contoh, untuk melengkapi data mahasiswa kita juga ingin mengelola data hobbi dan orang tua. Berikut adalah contoh fakta yang digunakan beserta relasi yang terjadi.</p> <p>Data orang tua dan hobbi di atas dapat digolongkan sebagai himpunan entitas lemah (yang dalam diagram E-R dinyatakan dengan kotak bergaris ganda), karena kemunculannya sangat tergantung pada adanya relasi dengan entitas yang ada pada himpunan entitas mahasiswa. Jika misalnya mahasiswa bernama ‘Asep Supena’ tidak ada, maka orang tua bernama ‘Abdul Rahman’ serta hobbi ‘sepak bola’,’melukis’,dan ‘berenang’ juga ditiadakan. Kedua himpunan entitas tersebut tidak memiliki atribut sendiri yang dapat menjamin keunikan entitas-entitas di dalamnya. Atribut nama_ortu dan hobbi diberi garis bawah putus-putus untuk menunjukkan bahwa kedua atribut itu merupakan atribut key yang tidak meyakinkan. Jika ada mahasiswa yang bersaudara atau yang mempunyai hobbi yang sama, maka entitas-entitas yang sama akan muncul pada himpunan entitas orang tua dan hobbi.</p> </blockquote> <p><strong>2. Sub-Entitas (<em>Subtype Entities</em>)</strong></p> <blockquote> <p>Sub entitas merupakan himpuman entitas yang beranggotakan entitas-entitas yang merupakan bagian dari himpunan entitas yang lebih superior / utama. Sub entitas ini merupakan hasil dekomposisi (spesialisasi) himpunan entitas berdasarkan pengelompokkan tertentu.</p> </blockquote>"
        },
        {
          "title": "Varian Relasi",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p><strong>1. Relasi Tunggal (<em>Unary Relation</em>)</strong></p> <blockquote> <p>Relasi tunggal merupakan relasi yang terjadi dari sebuah himpunan entitas ke himpunan entitas yang sama.</p> <p>Pada contoh, hubungan yang ingin ditunjukkan adalah fakta tentang adanya dosen pendamping (yang sudah senior) bagi para dosen baru dalam rangka pembinaan profesi. Setiap dosen senior bisa menjadi pendamping bagi beberapa dosen baru sekaligus. Sementara setiap dosen baru hanya dapat memiliki seorang dosen pendamping. Baik entitas dosen senior maupun entitas dosen baru ditempatkan di sebuah himpunan entitas, sehingga relasinya terjadi pada sebuah himpunan entitas saja.</p> </blockquote> <p><strong>2. Relasi Multi Entitas (<em>N-ary Relation</em>)</strong></p> <blockquote> <p>Relasi multi entitas merupakan relasi dari tiga himpunan entitas atau lebih. Bentuk relasi semacam ini sedapat mungkin dihindari, karena akan mengaburkan derajat relasi yang ada dalam relasi tersebut. Sebagai contoh, pada sistem perkuliahan kita dapat menambahkan himpunan entitas baru, yaitu himpunan entitas ruang yang kemudian bersama dengan himpunan entitas dosen dan kuliah membentuk relasi pengajaran.</p> <p>Pada diagram E-R diatas, himpunan entitas ruang dibentuk karena data ruang juga memiliki entitas- entitas dengan sejumlah atribut khusus (kd_ruang, nama_ruang, kapasitas). Selanjutnya, relasi yang kemudian terbentuk dari ketiga himpunan entitas di atas tentu saja akan memiliki key yang berasal dari ketiganya (kd_kul, kd_dosen, kd_ruang).</p> <p>Yang menjadi tidak jelas pada relasi demikian adalah derajat relasinya. Sebagaimana telah diketahui, derajat relasi mengacu pada seberapa besar tingkat korespondensi antara sebuah himpunan entitas dengan himpunan entitas yang lain. Dalam relasi ini, himpunan entitas yang lain itu ada lebih dari satu. Karena itu, dapat saja diputuskan untuk tidak menunjukkan derajat relasi untuk relasi ini.</p> </blockquote> <p><strong>3. Relasi Ganda (<em>Redundant Relation</em>)</strong></p> <blockquote> <p>Ada kalanya, relasi yang muncul antara dua himpunan entitas tidak hanya memiliki satu relasi, tetapi ada lebih dari satu relasi. Relasi demikian disebut relasi ganda (redudant relation). Sebagai contoh terdapat kasus relasi antara himpunan entitas dosen dan kuliah. Relasi yang diketahui adalah ‘mengajar’. Sebagain contoh dosen A mengajar mata kuliah X, dan dosen B mengajar mata kuliah Y, namun ada fakta bahwa dosen A juga berkemampuan mengajar mata kuliah Y, dan dosen B yang berkemampuan mengajar mata kuliah X. Berdasarkan fakta tersebut dapat dibuat sebuah diagram E-R seperti :</p> <p>Relasi ganda tersebut memang perlu dibuat, karena memang kebutuhan (makna) dari kedua relasi tersebut memang berbeda. Demikian juga dengan atribut-atribut relasi dan derajat Relasinya.</p> </blockquote>"
        },
        {
          "title": "Spesialisasi dan Generalisasi",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Pada sebuah himpunan entitas dimungkinkan adanya pengelompokkan entitas-entitas yang menjadi anggotanya. Kadang ditemui atribut-atribut yang melekat pada masing-masing kelompok tersebut tidak sepenuhnya sama. Sebagai contoh, entitas-entitas yang ada pada himpunan entitas dosen dapat dibagi dalam dua kelompok, yaitu :</p> <ol> <li>Dosen tetap (yang sekaligus merupakan karyawan di perguruan tinggi yang bersangkutan)</li> <li>Dosen tidak tetap (yang telah menjadi karyawan di perguruan tinggi / perusahaan lain)</li> </ol> <p>Katakanlah, atribut-atribut yang ada pada himpunan entitas dosen diperluas. Dosen tetap bisa memiliki atribut-atribut tambahan seperti NIK, pangkat, dan tgl_masuk. Bagi dosen tidak tetap atribut- atribut tidak relevan (tidak dimiliki). Atribut-atribut tambahan yang relevan bagi kelompok dosen tidak tetap adalah nama_kantor, dan alamat_kantor. Adanya pembedaan atribut ini menyebabkan entitas- entitas tersebut tidak mungkin disatukan dalam sebuah himpunan entitas saja. Karena itu, pemisahan (spesialisasi) entitas dapat dilakukan. Gambar diagram E-R untuk kasus ini adalah :</p> <p>Contoh yang lain adalah untuk himpunan entitas mahasiswa, yang diketahui bahwa mahasiswa dapat dibagi kedalam dua kelompok, yaitu mahasiswa D3 dan mahasiswa S1. Tetapi pengelompokkan ini tidak dipertegas dengan adanya perbedaan atribut. Karena tidak tegasnya perbedaan atribut dari kedua kelompok, maka kelompok-kelompok tersebut disatukan dalam sebuah himpunan entitas mahasiswa. Proses demikian disebut generalisasi. Gambar E-R untuk kasus ini adalah :</p> <p>Dengan demikian, spesialisasi dan generalisasi merupakan dua proses yang berlawanan. Yang ditekankan dalam spesialisasi adalah perbedaan antar kelompok entitas, sedangkan dalam generalisasi yang ditekankan adalah persamaannya. Adanya spesialisasi dan generalisasi diwujudkan dalam notasi relasi yang khusus, yang disebut relasi ‘ISA’ (yang berasal dari ‘Is A’).</p> <p>Adanya spesialisasi dalam perancangan basis data, umumnya akan terlihat secara eksplisit pada hasil akhir diagram E-R. Sedangkan proses generalisasi seringkali ditiadakan pada hasil akhir diagram E-R. Peniadaan generalisasi ini direpresentasikan dengan adanya atribut baru pada himpunan entitas akhir. Pada contoh di atas, dapat menambahkan atribut baru (jenjang_studi yang nilainya D3 atau S1) ke dalam himpunan entitas mahasiswa.</p>"
        },
        {
          "title": "Agregasi",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<p>Dalam relaitas dapat pula dijumpai adana realasi yang secara kronologis mensyaratkan telah adanya relasi lain. Dengan kata lain, sebuah relasi terbentuk tidak hanya dari entitas tapi juga mengandung unsur dari relasi lain. Fenomena demikian dapat diakomodasi dengan agregasi. Menggambarkan sebuah himunan relasi yang secara langsung menghubungkan sebuah himpunan relasi yang secara langsung menghubungkan sebuah himpunan relasi yang secara langsung menghubungkan sebuah himpunan entitas dengan sebuah himpunan relasi dalam diagram E-R, sebenarnya tidak tepat atau bahkan ada yang dengan tegas tidak memperbolehkannya. Karena itu, sebagai jalan tengah, dapat menggunakan notasi khusus untuk menunjukkan adanya agregasi semacam itu.</p> <p>Contoh : terdapat relasi antara himpunan entitas mahasiswa dan himpunan entitas kuliah. Ada sejumlah mata kuliah yang membutuhkan kegiatan praktikum (tidak semua). Diagram E-R yang dapat digambarkan untuk kasus ini yaitu :</p>"
        }
      ]
    },
    {
      "title": "Cara Membuat Aplikasi android",
      "steps_count": 5,
      "sub_title": "Untuk Pemula",
      "image_url": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRoQJazpADZzh6bkZ89cAUGBMW1--Vov-KeC_ZwiWdsUxRvKc7M",
      "total_time": 36000,
      "desc": "Ini merupakan tutorial singkat untuk android, sangat di rekomendasikan untuk awal pembelajaran programming, lorem ipsum dolor sit amet.",
      "steps": [
        {
          "title": "Mempelajari Layout",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<b>Lorem ipsum dolor</b> adalah contoh teks atau dummy dalam industri percetakan dan penataan huruf atau typesetting. Lorem Ipsum telah menjadi standar contoh teks sejak tahun 1500an, saat seorang tukang cetak yang tidak dikenal mengambil sebuah kumpulan teks dan mengacaknya untuk menjadi sebuah buku contoh huruf. Ia tidak hanya bertahan selama 5 abad, tapi juga telah beralih ke penataan huruf elektronik, tanpa ada perubahan apapun. Ia mulai dipopulerkan pada tahun 1960 dengan diluncurkannya lembaran-lembaran Letraset yang menggunakan kalimat-kalimat dari Lorem Ipsum, dan seiring munculnya perangkat lunak Desktop Publishing seperti Aldus PageMaker juga memiliki versi Lorem Ipsum."
        },
        {
          "title": "Mempelajari Java",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<b>Lorem ipsum dolor</b> adalah contoh teks atau dummy dalam industri percetakan dan penataan huruf atau typesetting. Lorem Ipsum telah menjadi standar contoh teks sejak tahun 1500an, saat seorang tukang cetak yang tidak dikenal mengambil sebuah kumpulan teks dan mengacaknya untuk menjadi sebuah buku contoh huruf. Ia tidak hanya bertahan selama 5 abad, tapi juga telah beralih ke penataan huruf elektronik, tanpa ada perubahan apapun. Ia mulai dipopulerkan pada tahun 1960 dengan diluncurkannya lembaran-lembaran Letraset yang menggunakan kalimat-kalimat dari Lorem Ipsum, dan seiring munculnya perangkat lunak Desktop Publishing seperti Aldus PageMaker juga memiliki versi Lorem Ipsum."
        },
        {
          "title": "Memahami Activity",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<b>Lorem ipsum dolor</b> adalah contoh teks atau dummy dalam industri percetakan dan penataan huruf atau typesetting. Lorem Ipsum telah menjadi standar contoh teks sejak tahun 1500an, saat seorang tukang cetak yang tidak dikenal mengambil sebuah kumpulan teks dan mengacaknya untuk menjadi sebuah buku contoh huruf. Ia tidak hanya bertahan selama 5 abad, tapi juga telah beralih ke penataan huruf elektronik, tanpa ada perubahan apapun. Ia mulai dipopulerkan pada tahun 1960 dengan diluncurkannya lembaran-lembaran Letraset yang menggunakan kalimat-kalimat dari Lorem Ipsum, dan seiring munculnya perangkat lunak Desktop Publishing seperti Aldus PageMaker juga memiliki versi Lorem Ipsum."
        },
        {
          "title": "Membuat aplikasi pertama mu",
          "estimation": 9000,
          "image_header": "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSpXvHAekY0Zr9M6Qw2CUiCLgG6tgtm_MsNfChTr77hRdyoFCfO",
          "content" : "<b>Lorem ipsum dolor</b> adalah contoh teks atau dummy dalam industri percetakan dan penataan huruf atau typesetting. Lorem Ipsum telah menjadi standar contoh teks sejak tahun 1500an, saat seorang tukang cetak yang tidak dikenal mengambil sebuah kumpulan teks dan mengacaknya untuk menjadi sebuah buku contoh huruf. Ia tidak hanya bertahan selama 5 abad, tapi juga telah beralih ke penataan huruf elektronik, tanpa ada perubahan apapun. Ia mulai dipopulerkan pada tahun 1960 dengan diluncurkannya lembaran-lembaran Letraset yang menggunakan kalimat-kalimat dari Lorem Ipsum, dan seiring munculnya perangkat lunak Desktop Publishing seperti Aldus PageMaker juga memiliki versi Lorem Ipsum."
        }
      ]
    }
  ]
}
